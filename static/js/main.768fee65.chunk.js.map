{"version":3,"sources":["components/User/index.js","components/Pagination/styledComponents.js","components/Pagination/index.js","components/AdminPage/index.js","App.js","index.js"],"names":["User","state","editedName","editedEmail","editedRole","editMode","onClickDelete","props","deleteUser","users","id","saveEditedUser","updateUser","name","email","role","setState","onChangeRole","event","target","value","onChangeEmail","onChangeName","onClickEdit","prevState","toggleCheckbox","onChangeUserCheckbox","this","isChecked","className","type","onChange","placeholder","onClick","checked","Component","NavigationButtons","styled","button","isActive","StartingNavigationButton","isDisabled","PreviousNavigationButton","ForwardNavigationButton","EndNavigationButton","Pagination","pagesCount","navigateTo","totalUsers","length","totalPages","i","Math","round","push","pagesLimit","slice","onClickPage","deleteSelected","map","eachPage","requestStatusConstants","Admin","requestStatus","selectAll","userSearchInput","componentDidMount","getUsers","a","fetch","response","ok","json","fetchedData","updatedUsers","eachUser","pageNum","getCheckedUsers","user","checkedUsersIds","filter","includes","remainingUsers","userData","updatedUsersData","onChangeMemberCheckbox","toggleCheckAllCheckboxes","searchResult","getSearchResult","currentPageUsersIds","getCurrentPageUsers","onChangeUserInputValue","previousPagesUsers","toLowerCase","startsWith","renderSuccessView","currentPageUsers","src","alt","renderLoadingView","height","width","renderAdminPage","renderFailureView","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.768fee65.chunk.js","sourcesContent":["import { Component } from \"react\";\r\n\r\nimport { FiEdit } from \"react-icons/fi\";\r\nimport { AiOutlineDelete } from \"react-icons/ai\";\r\nimport \"./index.css\";\r\n\r\nclass User extends Component {\r\n  state = {\r\n    editedName: \"\",\r\n    editedEmail: \"\",\r\n    editedRole: \"\",\r\n    editMode: false\r\n  };\r\n\r\n  onClickDelete = () => {\r\n    const { deleteUser, users } = this.props;\r\n    const { id } = users;\r\n    deleteUser(id);\r\n  };\r\n\r\n  saveEditedUser = () => {\r\n    const { editedName, editedEmail, editedRole } = this.state;\r\n    const { users, updateUser } = this.props;\r\n    const { id } = users;\r\n    const editedUser = {\r\n      id,\r\n      name: editedName,\r\n      email: editedEmail,\r\n      role: editedRole\r\n    };\r\n\r\n    updateUser(editedUser);\r\n    this.setState({\r\n      editMode: false\r\n    });\r\n  };\r\n\r\n  onChangeRole = (event) => {\r\n    this.setState({\r\n      editedRole: event.target.value\r\n    });\r\n  };\r\n\r\n  onChangeEmail = (event) => {\r\n    this.setState({\r\n      editedEmail: event.target.value\r\n    });\r\n  };\r\n\r\n  onChangeName = (event) => {\r\n    this.setState({\r\n      editedName: event.target.value\r\n    });\r\n  };\r\n\r\n  onClickEdit = () => {\r\n    const { users } = this.props;\r\n    const { name, email, role } = users;\r\n    this.setState((prevState) => ({\r\n      editedName: name,\r\n      editedEmail: email,\r\n      editedRole: role,\r\n      editMode: !prevState.editMode\r\n    }));\r\n  };\r\n\r\n  toggleCheckbox = () => {\r\n    const { onChangeUserCheckbox, users } = this.props;\r\n    const { id } = users;\r\n    onChangeUserCheckbox(id);\r\n  };\r\n\r\n  render() {\r\n    const { editMode, editedName, editedEmail, editedRole } = this.state;\r\n    const { users } = this.props;\r\n    const { name, email, role, isChecked } = users;\r\n\r\n    return (\r\n      <li className=\"user-item\">\r\n        {editMode ? (\r\n          <div className=\"editor-mode-container\">\r\n            <input\r\n              className=\"username-input\"\r\n              type=\"text\"\r\n              value={editedName}\r\n              onChange={this.onChangeName}\r\n              placeholder=\"USERNAME\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              className=\"user-email-input\"\r\n              value={editedEmail}\r\n              onChange={this.onChangeEmail}\r\n              placeholder=\"EMAIL\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              className=\"user-role-input\"\r\n              value={editedRole}\r\n              onChange={this.onChangeRole}\r\n              placeholder=\"ROLE\"\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              className=\"save-button\"\r\n              onClick={this.saveEditedUser}\r\n            >\r\n              SAVE\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={isChecked}\r\n              onChange={this.toggleCheckbox}\r\n              className=\"user-checkbox\"\r\n            />\r\n            <p className=\"user-content\">{name}</p>\r\n            <p className=\"user-content\">{email}</p>\r\n            <p className=\"user-content\">{role}</p>\r\n            <div className=\"actionsContainer\">\r\n              <FiEdit className=\"edit-icon\" onClick={this.onClickEdit} />\r\n              <AiOutlineDelete\r\n                className=\"delete-user-icon\"\r\n                onClick={this.onClickDelete}\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n      </li>\r\n    );\r\n  }\r\n}\r\nexport default User;\r\n","import styled from \"styled-components\";\r\n\r\nexport const NavigationButtons = styled.button`\r\n  color: ${(value) => (value.isActive ? \"#0074d9\" : \"#ffffff\")};\r\n  border: 2px solid ${(value) => (value.isActive ? \"#0074d9\" : \"#ffffff\")};\r\n  background-color: ${(value) => (value.isActive ? \"inherit\" : \"#0074d9\")};\r\n`;\r\n\r\nexport const StartingNavigationButton = styled.button`\r\n  color: ${(value) => (value.isDisabled ? \"#fff\" : \"gray\")};\r\n  border: 2px solid ${(value) => (value.isDisabled ? \"#0074d9\" : \"gray\")};\r\n  background-color: ${(value) => (value.isDisabled ? \"#0074d9\" : \"inherit\")};\r\n  padding: 12px;\r\n  font-family: \"Roboto\";\r\n  height: 50px;\r\n  width: 50px;\r\n  font-weight: 600;\r\n  border-radius: 50%;\r\n`;\r\nexport const PreviousNavigationButton = styled.button`\r\n  color: ${(value) => (value.isDisabled ? \"#fff\" : \"gray\")};\r\n  border: 2px solid ${(value) => (value.isDisabled ? \"#0074d9\" : \"gray\")};\r\n  background-color: ${(value) => (value.isDisabled ? \"#0074d9\" : \"inherit\")};\r\n  padding: 12px;\r\n  font-family: \"Roboto\";\r\n  height: 50px;\r\n  width: 50px;\r\n  font-weight: 600;\r\n  border-radius: 50%;\r\n`;\r\n\r\nexport const ForwardNavigationButton = styled.button`\r\n  color: ${(value) => (value.isDisabled ? \"#fff\" : \"gray\")};\r\n  border: 2px solid ${(value) => (value.isDisabled ? \"#0074d9\" : \"gray\")};\r\n  background-color: ${(value) => (value.isDisabled ? \"#0074d9\" : \"inherit\")};\r\n  padding: 12px;\r\n  font-family: \"Roboto\";\r\n  height: 50px;\r\n  width: 50px;\r\n  font-weight: 600;\r\n  border-radius: 50%;\r\n`;\r\n\r\nexport const EndNavigationButton = styled.button`\r\n  color: ${(value) => (value.isDisabled ? \"#fff\" : \"gray\")};\r\n  border: 2px solid ${(value) => (value.isDisabled ? \"#0074d9\" : \"gray\")};\r\n  background-color: ${(value) => (value.isDisabled ? \"#0074d9\" : \"inherit\")};\r\n  padding: 12px;\r\n  font-family: \"Roboto\";\r\n  height: 50px;\r\n  width: 50px;\r\n  font-weight: 600;\r\n  border-radius: 50%;\r\n`;\r\n","import {\r\n  AiOutlineDoubleLeft,\r\n  AiOutlineLeft,\r\n  AiOutlineRight,\r\n  AiOutlineDoubleRight\r\n} from \"react-icons/ai\";\r\nimport {\r\n  NavigationButtons,\r\n  StartingNavigationButton,\r\n  PreviousNavigationButton,\r\n  ForwardNavigationButton,\r\n  EndNavigationButton\r\n} from \"./styledComponents\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst Pagination = (props) => {\r\n  const { users, pagesCount, navigateTo } = props;\r\n  const usersPerPage = 10;\r\n  const totalUsers = users.length;\r\n  const totalPages = [];\r\n  for (let i = 1; i <= Math.round(totalUsers / usersPerPage); i += 1) {\r\n    totalPages.push(i);\r\n  }\r\n  const pagesLimit = totalPages.slice(-1);\r\n\r\n  const onClickPage = (event) => {\r\n    navigateTo(event.target.value);\r\n  };\r\n\r\n  const onClickEnd = () => {\r\n    if (pagesLimit - 1 !== pagesCount) {\r\n      navigateTo(pagesLimit);\r\n    }\r\n  };\r\n\r\n  const onClickForward = () => {\r\n    if (pagesLimit > pagesCount + 1) {\r\n      navigateTo(pagesCount + 2);\r\n    }\r\n  };\r\n\r\n  const onClickPrevious = () => {\r\n    if (pagesCount > 0) {\r\n      navigateTo(pagesCount);\r\n    }\r\n  };\r\n\r\n  const onClickStart = () => {\r\n    if (pagesCount !== 0) {\r\n      navigateTo(1);\r\n    }\r\n  };\r\n\r\n  const onClickDeleteSelected = () => {\r\n    const { deleteSelected } = props;\r\n    deleteSelected();\r\n  };\r\n\r\n  return (\r\n    <div className=\"pagination-container\">\r\n      <button\r\n        className=\"delete-selected-button\"\r\n        type=\"button\"\r\n        onClick={onClickDeleteSelected}\r\n      >\r\n        Delete Selected\r\n      </button>\r\n      <ul className=\"pagination-controls\">\r\n        <li key=\"doubleLeft\">\r\n          <StartingNavigationButton\r\n            isDisabled={pagesCount !== 0}\r\n            type=\"button\"\r\n            onClick={onClickStart}\r\n            className=\"start-navigation-button\"\r\n          >\r\n            <AiOutlineDoubleLeft />\r\n          </StartingNavigationButton>\r\n        </li>\r\n        <li key=\"left\">\r\n          <PreviousNavigationButton\r\n            isDisabled={pagesCount !== 0}\r\n            type=\"button\"\r\n            onClick={onClickPrevious}\r\n            className=\"previous-navigation-button\"\r\n          >\r\n            <AiOutlineLeft />\r\n          </PreviousNavigationButton>\r\n        </li>\r\n        {totalPages.map((eachPage) => (\r\n          <li key={eachPage}>\r\n            <NavigationButtons\r\n              isActive={pagesCount === eachPage - 1}\r\n              className=\"navigation-button\"\r\n              value={eachPage}\r\n              type=\"button\"\r\n              onClick={onClickPage}\r\n            >\r\n              {eachPage}\r\n            </NavigationButtons>\r\n          </li>\r\n        ))}\r\n        <li key=\"right\">\r\n          <ForwardNavigationButton\r\n            isDisabled={pagesCount !== pagesLimit - 1}\r\n            type=\"button\"\r\n            onClick={onClickForward}\r\n            className=\"forward-navigation-button\"\r\n          >\r\n            <AiOutlineRight />\r\n          </ForwardNavigationButton>\r\n        </li>\r\n        <li key=\"doubleRight\">\r\n          <EndNavigationButton\r\n            isDisabled={pagesCount !== pagesLimit - 1}\r\n            type=\"button\"\r\n            onClick={onClickEnd}\r\n            className=\"end-navigation-button\"\r\n          >\r\n            <AiOutlineDoubleRight />\r\n          </EndNavigationButton>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import { Component } from \"react\";\r\nimport { TailSpin } from \"react-loader-spinner\";\r\nimport User from \"../User\";\r\nimport Pagination from \"../Pagination\";\r\nimport \"./index.css\";\r\n\r\nconst requestStatusConstants = {\r\n  loading: \"LOADING\",\r\n  success: \"SUCCESS\",\r\n  failure: \"FAILED\"\r\n};\r\n\r\nclass Admin extends Component {\r\n  state = {\r\n    users: [],\r\n    requestStatus: \"LOADING\",\r\n    pagesCount: 0,\r\n    selectAll: false,\r\n    userSearchInput: \"\"\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.getUsers();\r\n  };\r\n\r\n  getUsers = async () => {\r\n    this.setState({\r\n      requestStatus: \"LOADING\"\r\n    });\r\n\r\n    const url =\r\n      \"https://geektrust.s3-ap-southeast-1.amazonaws.com/adminui-problem/members.json\";\r\n\r\n    const response = await fetch(url);\r\n\r\n    if (response.ok === true) {\r\n      const fetchedData = await response.json();\r\n      const updatedUsers = fetchedData.map((eachUser) => ({\r\n        ...eachUser,\r\n        isChecked: false\r\n      }));\r\n      this.setState({\r\n        users: updatedUsers,\r\n        requestStatus: \"SUCCESS\"\r\n      });\r\n    } else {\r\n      this.setState({\r\n        requestStatus: \"FAILED\"\r\n      });\r\n    }\r\n  };\r\n\r\n  navigateTo = (pageNum) => {\r\n    this.setState({\r\n      pagesCount: pageNum - 1\r\n    });\r\n  };\r\n\r\n  getCheckedUsers = (users) => {\r\n    const checkedUsers = users.map((user) => {\r\n      if (user.isChecked === true) {\r\n        return user.id;\r\n      }\r\n      return null;\r\n    });\r\n    return checkedUsers;\r\n  };\r\n\r\n  deleteSelected = () => {\r\n    const { users } = this.state;\r\n    const checkedUsersIds = this.getCheckedUsers(users);\r\n    const updatedUsers = users.filter(\r\n      (eachUser) => !checkedUsersIds.includes(eachUser.id)\r\n    );\r\n    this.setState({\r\n      users: updatedUsers,\r\n      selectAll: false\r\n    });\r\n  };\r\n\r\n  onClickDelete = (id) => {\r\n    const { users } = this.state;\r\n    const remainingUsers = users.filter((eachUser) => eachUser.id !== id);\r\n    this.setState({\r\n      users: remainingUsers\r\n    });\r\n  };\r\n\r\n  updateUser = (userData) => {\r\n    const { users } = this.state;\r\n    const updatedUsersData = users.map((eachUser) => {\r\n      if (eachUser.id === userData.id) {\r\n        return userData;\r\n      }\r\n      return eachUser;\r\n    });\r\n    this.setState({\r\n      users: updatedUsersData\r\n    });\r\n  };\r\n\r\n  onChangeMemberCheckbox = (id) => {\r\n    const { users } = this.state;\r\n    const updatedUsers = users.map((eachUser) => {\r\n      if (eachUser.id === id) {\r\n        const UpdatedMemberData = {\r\n          ...eachUser,\r\n          isChecked: !eachUser.isChecked\r\n        };\r\n        return UpdatedMemberData;\r\n      }\r\n      return eachUser;\r\n    });\r\n    this.setState({\r\n      users: updatedUsers\r\n    });\r\n  };\r\n\r\n  toggleCheckAllCheckboxes = () => {\r\n    const { selectAll, users } = this.state;\r\n    this.setState({\r\n      selectAll: !selectAll\r\n    });\r\n\r\n    const searchResult = this.getSearchResult(users);\r\n    const currentPageUsers = this.getCurrentPageUsers(searchResult);\r\n    const currentPageUsersIds = currentPageUsers.map((eachUser) => eachUser.id);\r\n    if (selectAll === false) {\r\n      const updatedUsers = users.map((eachUser) => {\r\n        if (currentPageUsersIds.includes(eachUser.id)) {\r\n          return { ...eachUser, isChecked: true };\r\n        }\r\n        return eachUser;\r\n      });\r\n      this.setState({\r\n        users: updatedUsers\r\n      });\r\n    } else {\r\n      const updatedUsers = users.map((eachUser) => ({\r\n        ...eachUser,\r\n        isChecked: false\r\n      }));\r\n      this.setState({\r\n        users: updatedUsers\r\n      });\r\n    }\r\n  };\r\n\r\n  onChangeUserInputValue = (event) => {\r\n    this.setState({\r\n      userSearchInput: event.target.value,\r\n      pagesCount: 0\r\n    });\r\n  };\r\n\r\n  getCurrentPageUsers = (searchResult) => {\r\n    const { pagesCount } = this.state;\r\n    const usersPerPage = 10;\r\n    const searchResultLength = searchResult.length;\r\n    const previousPagesUsers = pagesCount * usersPerPage;\r\n    const remainingUsers = searchResultLength - previousPagesUsers;\r\n    let presentPageUsers = [];\r\n    if (remainingUsers <= usersPerPage) {\r\n      presentPageUsers = searchResult.slice(previousPagesUsers);\r\n    } else {\r\n      presentPageUsers = searchResult.slice(\r\n        previousPagesUsers,\r\n        previousPagesUsers + usersPerPage\r\n      );\r\n    }\r\n    return presentPageUsers;\r\n  };\r\n\r\n  getSearchResult = () => {\r\n    const { userSearchInput, users } = this.state;\r\n    const searchResult = users.filter(\r\n      (eachUser) =>\r\n        eachUser.name.toLowerCase().startsWith(userSearchInput.toLowerCase()) ||\r\n        eachUser.email\r\n          .toLowerCase()\r\n          .startsWith(userSearchInput.toLowerCase()) ||\r\n        eachUser.role.toLowerCase().startsWith(userSearchInput.toLowerCase())\r\n    );\r\n    return searchResult;\r\n  };\r\n\r\n  renderSuccessView = () => {\r\n    const { users, pagesCount, selectAll, userSearchInput } = this.state;\r\n    const searchResult = this.getSearchResult();\r\n    const currentPageUsers = this.getCurrentPageUsers(searchResult);\r\n\r\n    return (\r\n      <>\r\n        <input\r\n          type=\"search\"\r\n          value={userSearchInput}\r\n          onChange={this.onChangeUserInputValue}\r\n          placeholder=\"Search by name, email or role\"\r\n          className=\"user-input\"\r\n        />\r\n        {currentPageUsers.length === 0 ? (\r\n          <div>\r\n            <img\r\n              src=\"https://res.cloudinary.com/aguruprasad/image/upload/v1644149686/no-users-found_3_km6yk0.png\"\r\n              className=\"not-found-image\"\r\n              alt=\"no users found\"\r\n            />\r\n          </div>\r\n        ) : (\r\n          <ul className=\"users-list\">\r\n            <li className=\"list-header\">\r\n              <input\r\n                checked={selectAll}\r\n                onChange={this.toggleCheckAllCheckboxes}\r\n                type=\"checkbox\"\r\n                className=\"header-checkbox\"\r\n              />\r\n              <h1 className=\"header-name\">Name</h1>\r\n              <h1 className=\"header-email\">Email</h1>\r\n              <h1 className=\"header-role\">Role</h1>\r\n              <h1 className=\"header-actions\">Actions</h1>\r\n            </li>\r\n            {currentPageUsers.map((eachUser) => (\r\n              <User\r\n                users={eachUser}\r\n                key={eachUser.id}\r\n                updateUser={this.updateUser}\r\n                deleteUser={this.onClickDelete}\r\n                onChangeUserCheckbox={this.onChangeUserCheckbox}\r\n              />\r\n            ))}\r\n          </ul>\r\n        )}\r\n\r\n        <Pagination\r\n          users={users}\r\n          deleteSelected={this.deleteSelected}\r\n          pagesCount={pagesCount}\r\n          navigateTo={this.navigateTo}\r\n        />\r\n      </>\r\n    );\r\n  };\r\n\r\n  renderLoadingView = () => (\r\n    <div className=\"loader-container\" data-testid=\"loader\">\r\n      <TailSpin height={50} width={50} />\r\n    </div>\r\n  );\r\n\r\n  renderAdminPage = () => {\r\n    const { requestStatus } = this.state;\r\n    switch (requestStatus) {\r\n      case requestStatusConstants.loading:\r\n        return this.renderLoadingView();\r\n\r\n      case requestStatusConstants.success:\r\n        return this.renderSuccessView();\r\n\r\n      case requestStatusConstants.failure:\r\n        return this.renderFailureView();\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"background-container\">\r\n        <div className=\"admin-page\">{this.renderAdminPage()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Admin;\r\n","import Admin from \"./components/AdminPage\";\n\nimport \"./App.css\";\n\nconst App = () => <Admin />;\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}